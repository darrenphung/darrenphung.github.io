* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}


body {
  font-family: 'DM Sans', sans-serif;
  background-color: #000;
  color: #fff;
}

.front-page {
  height: 100vh;
}

.works {
  height: 100vh;
  padding: 5% 20%;
  background-color: #fff;
}

nav {
  position: fixed;
  top: 0;
  display: flex;
  justify-content: space-between;
  width: 100%;
  min-height: 10vh;
  align-items: center;
  padding: 0 3rem;
}

.nav-scrolled {
  background-color: red;
}

.nav-logo {
  fill: #fff;
  width: 80px;
}
.nav-links {
  display: flex;
  justify-content: space-between;
  list-style: none;
}
.nav-links li {
  color: #878787;
  padding: 1rem;
  transition: all 0.3s ease;
}

.nav-links li a{
  color: #878787;
  text-decoration: none;
}

.nav-links li a:hover{
  color: #fff;
  text-decoration: none;
}

.social-buttons {
  width: 20px;
}

.cursor {
  width: 40px;
  height: 40px;
  border: 2px solid #fff;
  border-radius: 50%;
  position: absolute;
  transform: translate(-50%, -50%);
  pointer-events: none;
  transition: all 0.3s ease;
  transform-origin: 100% 100%;
  transition-property: background, transform;
  z-index: 0;
  background: transparent;
  backdrop-filter: grayscale();
  z-index: -1;
}

.link-grow {
  transform: scale(2);
  background: #fff;
  opacity: 0.15;
}
.hovered-link {
  color: white;
  transition: all 0.5s ease;
}

.description-container {
  padding: 30% 5% 0 5%;
  display: flex;
  flex-direction: row-reverse;
  align-items: center;
}

.front-desc h2 {
  font-size: 3.5rem;
  text-align: right;
}

.front-desc h2 span {
  color: #000;
  -webkit-text-stroke: 2px #fff;
}

.works-container {
  background-color: red;
}


/* block-$ */
.block-reveal {
  --t: calc(var(--td) + var(--d));

  color: transparent;
  margin-top: 0.5rem;

  position: relative;
  overflow: hidden;

  animation: revealBlock 0s var(--t) forwards;
}

.block-reveal::after {
  content: '';

  width: 0%;
  height: 100%;
  padding-bottom: 4px;

  position: absolute;
  top: 0;
  left: 0;

  background: var(--bc);
  animation: revealingIn var(--td) var(--d) forwards, revealingOut var(--td) var(--t) forwards;
}


/* animations */
@keyframes revealBlock {
  100% {
    color: #fff;
  }
}

@keyframes revealingIn {

  0% {
    width: 0;
  }

  100% {
    width: 100%;
  }
}

@keyframes revealingOut {

  0% {
    transform: translateX(0);
  }

  100% {
    transform: translateX(100%);
  }

}